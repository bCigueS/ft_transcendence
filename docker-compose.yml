version: '3'
services:
  postgres:
    container_name: database
    image: postgres:13-alpine
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - transendance
    healthcheck:
      test: PGPASSWORD=123 psql -h "database" -U "postgres" -d "postgres" -c '\q'
      interval: 5s
      timeout: 1s
      retries: 20
      start_period: 5s
  
  nestjs:
    container_name: nestapp
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "5555:5555"
    env_file:
      - .env
    volumes:
      - ./backend/app:/usr/src/app
    networks:
      - transendance
    depends_on:
      postgres:
        condition: service_healthy

  reactjs:
    container_name: reactapp
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8000:3000"
    env_file:
      - .env
    volumes:
      - ./frontend/app:/usr/src/app
    networks:
      - transendance
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres:
    name: nest-init-docker-db
  nestapp:
    name: nestapp
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind' 
      device: '~/data/nestapp'
  reactapp:
    name: reactapp
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind' 
      device: '~/data/reactapp'

networks:
  transendance:
    name: transendance
